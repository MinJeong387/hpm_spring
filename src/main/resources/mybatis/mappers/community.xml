<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="himedia.hpm_spring.mappers.CommunityMapper">
	<resultMap id="communityResultMap" type="himedia.hpm_spring.repository.vo.CommunityVo">
    	<result property="id" column="id"/>
    	<result property="nickname" column="nickname"/>
    	<result property="title" column="title"/>
    	<result property="content" column="content"/>
    	<result property="updateDate" column="update_date"/>
    	<result property="usersId" column="users_id"/>
    	<result property="views" column="views"/>
    	<result property="commentCount" column="comment_count"/>
	</resultMap>

	<!-- 전체 게시글 조회 + 댓글 수 -->
	<select id="retrieveAllCommunities" resultMap="communityResultMap">
    SELECT c.*, u.nickname, 
           (SELECT COUNT(*) FROM community_comments cc WHERE cc.communities_id = c.id) AS comment_count
    FROM communities c
    JOIN users u ON c.users_id = u.id
    ORDER BY c.id DESC
	</select>
	
	<!-- 특정 게시글 조회 -->
	<select id="retrieveCommunityById" parameterType="Long" resultMap="communityResultMap">
	SELECT communities.*, users.nickname FROM communities JOIN users 
	WHERE communities.id=#{id} AND communities.users_id = users.id
	</select>
	
	<!-- 사용자의 게시글 조회 -->
	<select id="retrieveMyCommunities" parameterType="Long" resultMap="communityResultMap">
	SELECT id, title, update_date FROM communities WHERE users_id=#{usersId}
	</select>
	
	<!-- [경민] 키워드 기반 게시글 조회 -->
	<select id="retrieveCommunitiesByKeyword" parameterType="String" resultMap="communityResultMap">
	SELECT c.*, u.nickname
  	FROM communities c
  	JOIN users u ON c.users_id = u.id
  	WHERE c.title LIKE CONCAT('%', #{keyword}, '%')
    OR c.content LIKE CONCAT('%', #{keyword}, '%')
  	ORDER BY c.id DESC
	</select>
	
	<!-- 게시글 작성 -->
	<insert id="createCommunity" parameterType="CommunityVo" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO communities (title, content, update_date, users_id)
  	VALUES (#{title}, #{content}, #{updateDate}, #{usersId})
	</insert>
	
	<!-- 게시글 일부 수정 -->
	<update id="updateCommunity" parameterType="CommunityVo">
	UPDATE communities SET
 	title=#{title}, content=#{content}
	WHERE id=#{id}
	</update>

	<!-- 게시글 삭제 -->
	<delete id="deleteCommunity" parameterType="Map">
  	DELETE FROM communities
  	WHERE id = #{id} AND users_id = #{usersId}
	</delete>
	
	 <!-- 조회수 증가 -->
    <update id="incrementViews" parameterType="Long">
    UPDATE communities
    SET views = views + 1
    WHERE id = #{id}
    </update>
    


</mapper>