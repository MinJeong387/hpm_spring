<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="himedia.hpm_spring.mappers.RestaurantReviewMapper">

	<!-- 전체 맛집 리뷰 게시글 조회 -->
	<select id="retrieveAllReviews" resultType="rReviewVo">
	SELECT restaurants.*, users.nickname FROM restaurants JOIN users 
	WHERE restaurants.users_id = users.id 
	ORDER BY restaurants.id DESC
	</select>
	
	<!-- 특정 맛집 리뷰 게시글 조회 -->
	<select id="retrieveReviewById" parameterType="Long" resultType="rReviewVo">
	SELECT restaurants.*, users.nickname FROM restaurants JOIN users 
	WHERE restaurants.id=#{id} AND restaurants.users_id = users.id
	</select>
	
	<!-- 사용자의 맛집 리뷰 게시글 조회 -->
	<select id="retrieveMyReviews" parameterType="Long" resultType="rReviewVo">
	SELECT id, title, update_date FROM restaurants WHERE users_id=#{users_id}
	</select>
	
	<!-- 맛집 리뷰 게시글 작성 -->
	<insert id="createReview" parameterType="rReviewVo">
    INSERT INTO restaurants (
        name, location, course, level,
        title, content, update_date, users_id, mountains_id
    )
    VALUES (
        #{name}, #{location}, #{course}, #{level}, 
        #{title}, #{content}, #{update_date}, 
        (SELECT id FROM users WHERE users_id = #{users_id}), 
        (SELECT id FROM mountains WHERE mountains_id = #{mountains_id})
    )
</insert>
	
	<!-- 맛집 리뷰 게시글 일부 수정 -->
	<update id="updateReview" parameterType="rReviewVo">
	UPDATE restaurants SET
	name=#{name}, location=#{location}, course=#{course}, level=#{level}, 
	 title=#{title}, content=#{content}
	WHERE id=#{id}
	</update>
	
	<!-- 기존 맛집 리뷰 게시글 전체 수정 -->
	<!-- 
	<update id="replaceReview" parameterType="rReviewVo">
	UPDATE restaurants SET
	name=#{name}, location=#{location}, course=#{course}, level=#{level}, 
	 title=#{title}, content=#{content}
	WHERE id=#{id}
	</update>
	 -->

	<!-- 맛집 리뷰 게시글 삭제 -->
	<delete id="deleteReview" parameterType="Long">
	DELETE FROM restaurants WHERE id=#{id}
	</delete>
</mapper>